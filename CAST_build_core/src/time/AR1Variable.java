package time;import dataView.*;import models.*;public class AR1Variable extends StoredFunctVariable {	private String ar1ModelKey;	private int extraDecimals = 0;		public AR1Variable(String theName, DataSet data, String sourceKey, String ar1ModelKey) {		super(theName, data, sourceKey);		this.ar1ModelKey = ar1ModelKey;	}		public void setExtraDecimals(int extraDecimals) {		this.extraDecimals = extraDecimals;	}//--------------------------------------------------------		protected int getDecimals() {		NumVariable sourceVar = getSourceVariable();		return sourceVar.getMaxDecimals() + extraDecimals;	}		public boolean noteVariableChange(String key) {		return super.noteVariableChange(ar1ModelKey.equals(key) ? sourceKey : key);																//	fiddle to reinitialise when key = ar1ModelKey	}//--------------------------------------------------------		protected ValueEnumeration getEnumeration() {		NumVariable sourceVar = getSourceVariable();		LinearModel model = (LinearModel)data.getVariable(ar1ModelKey);		double b0 = model.getIntercept().toDouble();		double b1 = model.getSlope().toDouble();		return new AR1Enumeration(sourceVar.values(), b0, b1);	}	protected int getMinInfluence(int index) {		return (index == 0) ? 0 : index - 1;	}		protected int getMaxInfluence(int index) {		return getMinInfluence(index);	}}