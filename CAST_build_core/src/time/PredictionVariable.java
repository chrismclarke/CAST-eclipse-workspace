package time;import dataView.*;import models.*;public class PredictionVariable extends NumFunctionVariable {	static final private NumValue kNaNValue = new NumValue("?");		private NumVariable yVar, xVar, cyclicVar;	private String xKey, modelKey, cyclicKey;	private LinearModel model;	private int decimals;		public PredictionVariable(String theName, DataSet data, String yKey, String xKey,										String modelKey, String cyclicKey) {		super(theName);				this.xKey = xKey;		this.modelKey = modelKey;		this.cyclicKey = cyclicKey;				yVar = (NumVariable)data.getVariable(yKey);		xVar = (NumVariable)data.getVariable(xKey);		cyclicVar = (NumVariable)data.getVariable(cyclicKey);		model = (LinearModel)data.getVariable(modelKey);		decimals = cyclicVar.getMaxDecimals();	}		public int getMaxDecimals() {		return decimals;	}		public int noOfValues() {		return xVar.noOfValues();	}		public Value valueAt(int index) {		double y = yVar.doubleValueAt(index);		if (!Double.isNaN(y))			return kNaNValue;				Value x = xVar.valueAt(index);		double trend = model.evaluateMean(x);		double cyclic = cyclicVar.doubleValueAt(index);				return new NumValue(trend + cyclic, decimals);	}		public boolean noteVariableChange(String key) {		return xKey.equals(key) || modelKey.equals(key) || cyclicKey.equals(key);	}}