package time;import dataView.*;public class RepeatMedianVariable extends StoredFunctVariable {	private int medianCount = 1;	private int medianRun = 1;	private int extraDecimals = 0;		private boolean showEnds = true;		public RepeatMedianVariable(String theName, DataSet data, String sourceKey,																								boolean showEnds) {		super(theName, data, sourceKey);		this.showEnds = showEnds;	}		public RepeatMedianVariable(String theName, DataSet data, String sourceKey) {		this(theName, data, sourceKey, true);	}		public void setMedianCount(int count) {		medianCount = count;		markChanged();	}		public void setMedianRun(int run) {		medianRun = run;		markChanged();	}		public void setExtraDecimals(int extraDecimals) {		this.extraDecimals = extraDecimals;	}//--------------------------------------------------------		protected int getDecimals() {		NumVariable sourceVar = getSourceVariable();		return sourceVar.getMaxDecimals() + extraDecimals;	}//--------------------------------------------------------		protected ValueEnumeration getEnumeration() {		NumVariable sourceVar = getSourceVariable();				ValueEnumeration result = sourceVar.values();		if (medianRun > 1)			for (int i=0 ; i<medianCount ; i++)				result = new MedianEnumeration(result, medianRun, showEnds);				return result;	}	protected int getMinInfluence(int index) {		return index - Math.min(Math.min(index, noOfValues() - index - 1), (medianRun / 2) * medianCount);	}		protected int getMaxInfluence(int index) {		return index + Math.min(Math.min(index, noOfValues() - index - 1), (medianRun / 2) * medianCount);	}}