package transform;import dataView.*;public class ZScoreVariable extends NumFunctionVariable {	private DataSet data;	private NumVariable baseVariable;	private String baseKey;		private double mean, sd;	private int displayDecimals;		private NumValue tempVal;		public ZScoreVariable(String theName, DataSet data, String baseKey, int displayDecimals) {		super(theName);		this.data = data;		tempVal = new NumValue(0.0, displayDecimals);		this.displayDecimals = displayDecimals;		setBaseVariable(baseKey);	}		public double xToZ(double x) {		return (x - mean) / sd;	}		public void setBaseVariable(String baseKey) {		this.baseKey = baseKey;		baseVariable = (NumVariable)data.getVariable(baseKey);				int n = 0;		double sx = 0.0;		double sxx = 0.0;				ValueEnumeration e = baseVariable.values();		while (e.hasMoreValues()) {			double x = e.nextDouble();			sx += x;			sxx += x * x;			n ++;		}		mean = sx / n;		sd = Math.sqrt((sxx - mean * sx) / (n - 1));	}//--------------------------------------------------------		public int getMaxDecimals() {		return displayDecimals;	}		public int noOfValues() {		return baseVariable.noOfValues();	}		public Value valueAt(int index) {		tempVal.setValue((baseVariable.doubleValueAt(index) - mean) / sd);		return tempVal;	}//--------------------------------------------------------		public boolean noteVariableChange(String key) {		return key.equals(baseKey);	}}