package scatterProg;import java.util.*;import axis.*;import dataView.*;import utils.*;import scatter.*;public class OutlierApplet extends StrengthApplet {	static final private String OUTLIER1_PARAM = "outlier1";	static final private String OUTLIER2_PARAM = "outlier2";	static final private String OUTLIER3_PARAM = "outlier3";		static private final String kBadOutlier = "Invalid specification of outlier";		private OutlierVariable x2Variable, y2Variable;		protected DataSet readData() {		DataSet data = readCoreData();				paramString = new String[3];		paramString[0] = getParameter(OUTLIER1_PARAM);		paramString[1] = getParameter(OUTLIER2_PARAM);		paramString[2] = getParameter(OUTLIER3_PARAM);				NumVariable xVariable = (NumVariable)data.getVariable("x");		NumVariable yVariable = (NumVariable)data.getVariable("y");		x2Variable = new OutlierVariable(getParameter(X_VAR_NAME_PARAM), xVariable);		data.addVariable("x2", x2Variable);		y2Variable = new OutlierVariable(getParameter(Y_VAR_NAME_PARAM), yVariable);		data.addVariable("y2", y2Variable);				setOutlier(paramString[0]);				return data;	}		protected DataView createDataView(DataSet data, HorizAxis theHorizAxis, VertAxis theVertAxis) {		theView = new ScatterMoveView(data, this, theHorizAxis, theVertAxis, "x", "y", "x2", "y2");		return theView;	}		protected XChoice createChoice(DataSet data) {		XChoice outlierTypeChoice = new XChoice(this);		outlierTypeChoice.addItem("Example 1");		outlierTypeChoice.addItem("Example 2");		outlierTypeChoice.addItem("Example 3");				return outlierTypeChoice;	}		protected String[] getSliderText() {		String text[] = {null, "outlier", null};		return text;	}		protected void changeDataType(String newParams) {		setOutlier(newParams);	}		private void setOutlier(String newParams) {		if (newParams == null)			throw new RuntimeException(kBadOutlier);					StringTokenizer outlierSpec = new StringTokenizer(newParams);				if (!outlierSpec.hasMoreTokens())			throw new RuntimeException(kBadOutlier);		int index = Integer.parseInt(outlierSpec.nextToken());				if (!outlierSpec.hasMoreTokens())			throw new RuntimeException(kBadOutlier);		String xString = outlierSpec.nextToken();		double x = Double.parseDouble(xString);				if (!outlierSpec.hasMoreTokens())			throw new RuntimeException(kBadOutlier);		String yString = outlierSpec.nextToken();		double y = Double.parseDouble(yString);				x2Variable.setOutlier(index, x);		y2Variable.setOutlier(index, y);	}}