package mixture;import dataView.*;import models.*;public class MixtureModel extends MultipleRegnModel {		public MixtureModel(String name, DataSet data, String[] xKey, NumValue[] b,																																					NumValue s0) {		super(name, data, xKey, b, s0);	}		public MixtureModel(String name, DataSet data, String[] xKey, NumValue[] b) {		super(name, data, xKey, b);	}		public MixtureModel(String name, DataSet data, String[] xKey, String params) {		super(name, data, xKey, params);	}		public MixtureModel(String name, DataSet data, String[] xKey) {																		//		only for situations where parameters																		//		are set by LS immediately after		super(name, data, xKey);	}		protected void countBParams(DataSet data, String[] xKey) {		if (xKey.length != 3)			throw new RuntimeException("MixtureModel must have 3 x-variables.");		nBParam = null;		nBTotal = 6;	}		protected boolean fillXRow(double[] x, ValueEnumeration[] xe) {//		boolean rowOK = true;		double rVal = xe[0].nextDouble();		double sVal = xe[1].nextDouble();		double tVal = xe[2].nextDouble();				if (Double.isNaN(rVal) || Double.isNaN(sVal) || Double.isNaN(tVal))			return false;				x[0] = rVal;		x[1] = sVal;		x[2] = tVal;		x[3] = rVal * sVal;		x[4] = rVal * tVal;		x[5] = sVal * tVal;				return true;	}		public double evaluateMean(double[] x) {		double r = x[0];		double s = x[1];		double t = x[2];		double result = b[0].toDouble() * r + b[1].toDouble() * s + b[2].toDouble() * t + b[3].toDouble() * r * s													+ b[4].toDouble() * r * t + b[5].toDouble() * s * t;		return result;	}		public double evaluateMean(Value[] x) {		double xVal[] = new double[3];		xVal[0] = ((NumValue)x[0]).toDouble();		xVal[1] = ((NumValue)x[1]).toDouble();		xVal[2] = ((NumValue)x[2]).toDouble();		return evaluateMean(xVal);	}	}