package distn;public class GammaInfo extends DistnInfo {	private double gammaFactor;	private double shape;		public GammaInfo (double shape) {		super();		this.shape = shape;		gammaFactor = Math.exp(-GammaDistnVariable.aLoGam(shape));	}		public double zMin() {		return 0.0;	}		public double zMax() {		return shape + 6.0 * Math.sqrt(shape);	}		public double zMode() {		return Math.max(shape - 1.0, 0.0);	}		public boolean isSymmetric() {		return false;	}		public double getDensity(double z) {		double density = gammaFactor * Math.pow(z, shape - 1) * Math.exp(-z);//		System.out.println("z = " + z + ", density = " + density);		return density;	}		public boolean sameParams(ContinDistnVariable v) {		GammaDistnVariable gv = (GammaDistnVariable)v;		return gv.getShape().toDouble() == shape;	}}