package random;public class RandomBits extends RandomDiscrete {	private int noOfBits;		public RandomBits(int noOfBits, int count) {		super(count);		this.noOfBits = noOfBits;	}		public int generateOne() {		int mask = 0;		int power = 1;		for (int i=0 ; i<noOfBits ; i++) {			mask = mask + power;			power <<= 1;		}					return nextInt() & mask;	}		public int[] generate() {				//		redone for efficiency -- only find mask once		int mask = 0;		int power = 1;		for (int i=0 ; i<noOfBits ; i++) {			mask = mask + power;			power <<= 1;		}					int[] vals = new int[count];		for (int i=0 ; i<count ; i++)			vals[i] = nextInt() & mask;		return vals;	}}