package random;public class RandomProductMulti extends RandomBinomial {	private int n[];	private double p[];		public RandomProductMulti(int[] n, double[] p) {		super(1, 1, 0.5);		this.n = n;		this.p = p;	}		public int[] generate() {		int nx = n.length;		int ny = p.length / nx;		int count[] = new int[nx * ny];				for (int ix=0 ; ix<nx ; ix++) {			int index = ix*ny;			int nLeft = n[ix];			double pLeft = 1.0;			for (int jy=0 ; jy<ny-1 ; jy++) {				if (pLeft <= 0.0)					break;				int nextCount;				if (p[index] >= pLeft)					nextCount = nLeft;				else {					setParameters(nLeft, p[index] / pLeft);					nextCount = generateOne();				}				count[index] = nextCount;				nLeft -= nextCount;				pLeft -= p[index];				index ++;			}			count[(ix + 1) * ny - 1] = nLeft;		}		//		System.out.println("probs: " + p[0] + ", " + p[1] + ", " + p[2] + ", " + p[3]);//		System.out.println("n: " + n[0] + ", " + n[1]);//		System.out.println("counts: " + count[0] + ", " + count[1] + ", " + count[2] + ", " + count[3]);				return count;	}			public void setSampleSize(int[] n) {		this.n = n;	}		public int[] getSampleSizes() {		return n;	}		public double[] getProbs() {		return p;	}		public void setProbs(double[] p) {		this.p = p;	}}