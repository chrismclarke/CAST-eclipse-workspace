package structure;import java.awt.image.*;import random.RandomBits;public class AddNoiseFilter extends RGBImageFilter {	private int noiseWidth, noiseHeight;	private int noiseMult, imageMult;	private int noise[];		public AddNoiseFilter(int width, int height, double noisePropn) {		noiseWidth = width / 2;		noiseHeight = height / 2;		RandomBits generator = new RandomBits(24, noiseWidth * noiseHeight);		noise = generator.generate();		setNoisePropn(noisePropn);	}		public int filterRGB(int x, int y, int rgb) {		int n = noise[(x / 2) + (y / 2)  * noiseWidth];		return (rgb & 0xff000000) 							| addByteNoise((rgb & 0xff0000) >> 16, (n & 0xff0000) >> 16) << 16 							| addByteNoise((rgb & 0xff00) >> 8, (n & 0xff00) >> 8) << 8 							| addByteNoise(rgb & 0xff, n & 0xff);	}		public void setNoisePropn(double noisePropn) {		noiseMult = (int)Math.round(255 * noisePropn);		imageMult = 255 - noiseMult;	}		private int addByteNoise(int pix, int n) {		return (pix * imageMult + n * noiseMult) / 255;	}}