package stdErrorProg;import dataView.*;import axis.*;import coreGraphics.*;import coreVariables.*;import stdError.*;public class PropnBigBootstrapApplet extends ErrorBootstrapApplet {	static final private String CUTOFF_PARAM = "cutoff";		private NumValue cutoff;		protected SummaryDataSet getSummaryData(DataSet sourceData) {		SummaryDataSet summaryData = new SummaryDataSet(sourceData, "y");					cutoff = new NumValue(getParameter(CUTOFF_PARAM));			int decimals = Integer.parseInt(getParameter(DECIMALS_PARAM));						NumVariable popn = (NumVariable)sourceData.getVariable("popn");			ValueEnumeration pe = popn.values();			int n = 0;			int nGreater = 0;			while (pe.hasMoreValues()) {				double y = pe.nextDouble();				if (y > cutoff.toDouble())					nGreater ++;				n ++;			}			target = new NumValue(nGreater / (double)n, decimals);						PropnBiggerVariable estimator = new PropnBiggerVariable("Propn bigger", "y", cutoff.toDouble(), decimals);		summaryData.addVariable("est", estimator);					ScaledVariable error = new ScaledVariable(getParameter(ERROR_NAME_PARAM), estimator,																									"est", -target.toDouble(), 1.0, decimals);				summaryData.addVariable("error", error);				return summaryData;	}		protected StackedPlusNormalView getDataView(DataSet data, SummaryDataSet summaryData,														HorizAxis horizAxis, String paramName, String statisticName) {		PropnBigErrorView theView = new PropnBigErrorView(data, this, horizAxis, null, "y",										summaryData, "est", "error", target, paramName, statisticName, cutoff.toDouble());		theView.setShowDensity(ParamAndStatView.NO_DISTN);		theView.setActiveNumVariable("popn");		theView.setCrossSize(DataView.LARGE_CROSS);		return theView;	}}