package models;import dataView.*;public class ResidValueVariable extends NumFunctionVariable {		static private String[] makeArray(String s) {		String[] sArray = new String[1];		sArray[0] = s;		return sArray;	}		protected DataSet data;	protected String yKey, lineKey;	protected String xKey[];	protected int decimals;		protected Value tempX[];		public ResidValueVariable(String theName, DataSet data, String[] xKey, String yKey,																			String lineKey, int decimals) {		super(theName);		this.data = data;		this.xKey = xKey;		this.yKey = yKey;		this.lineKey = lineKey;		this.decimals = decimals;		tempX = new Value[xKey.length];	}		public ResidValueVariable(String theName, DataSet data, String oneXKey, String yKey,																			String lineKey, int decimals) {		this(theName, data, makeArray(oneXKey), yKey, lineKey, decimals);	}		public void setDecimals(int decimals) {		this.decimals = decimals;	}		public boolean noteVariableChange(String key) {		boolean changed = yKey.equals(key) || lineKey.equals(key);		for (int i=0 ; i<xKey.length ; i++)			changed = changed | xKey[i].equals(key);				if (changed)			clearSortedValues();		return changed;	}//--------------------------------------------------------		public int getMaxDecimals() {		return decimals;	}		public int noOfValues() {		return ((Variable)data.getVariable(yKey)).noOfValues();	}		public Value valueAt(int index) {		CoreModelVariable theModel = (CoreModelVariable)data.getVariable(lineKey);		for (int i=0 ; i<xKey.length ; i++)			tempX[i] = ((Variable)data.getVariable(xKey[i])).valueAt(index);		double fit = theModel.evaluateMean(tempX);				double y = ((NumVariable)data.getVariable(yKey)).doubleValueAt(index);		NumValue residVal = new NumValue(y - fit, decimals);		return residVal;	}}