package models;import dataView.*;public class AnovaSummaryData extends SummaryDataSet {//	static final private int kFDecimals = 2;	static final private String kRSquaredKey = "rSquared";		public AnovaSummaryData(DataSet sourceData, String sourceKey) {		super(sourceData, sourceKey);	}		public AnovaSummaryData(DataSet sourceData, String sourceKey, String[] componentKey,												int ssqDecimals, int rSquaredDecimals) {		super(sourceData, sourceKey);				addSsqs(sourceData, componentKey, kRSquaredKey, ssqDecimals, rSquaredDecimals);			}		public AnovaSummaryData(DataSet sourceData, String sourceKey, String[] componentKey,									int ssqDecimals, int rSquaredDecimals, int mssDecimals, int fDecimals) {		this(sourceData, sourceKey, componentKey, ssqDecimals, rSquaredDecimals);				addMsqF(sourceData, componentKey, mssDecimals, fDecimals);			}		public void addSsqs(DataSet sourceData, String[] componentKey, String rSquaredKey,																									int ssqDecimals, int rSquaredDecimals) {		for (int i=0 ; i<componentKey.length ; i++) {			SsqVariable ssq = new SsqVariable(componentKey[i], sourceData, componentKey[i],															ssqDecimals, SsqVariable.SSQ);			addVariable(componentKey[i], ssq);		}				SsqRatioVariable rSquared = new SsqRatioVariable(rSquaredKey,																	componentKey[componentKey.length - 1], componentKey[0],																	rSquaredDecimals, SsqRatioVariable.SSQ);																	//	gets passed resid and total ssq		addVariable(rSquaredKey, rSquared);	}		public void addMsqF(DataSet sourceData, String[] componentKey, int mssDecimals,																																					int fDecimals) {		for (int i=0 ; i<componentKey.length ; i++) {			String mssName = "m-" + componentKey[i];			SsqVariable mss = new SsqVariable(mssName, sourceData, componentKey[i], mssDecimals, SsqVariable.MEAN_SSQ);			addVariable(mssName, mss);		}				for (int i=1 ; i<componentKey.length-1 ; i++) {			String fName = "f-" + componentKey[i];			SsqRatioVariable f = new SsqRatioVariable(fName, componentKey[i],										componentKey[componentKey.length - 1], fDecimals, SsqRatioVariable.MEAN_SSQ);			addVariable(fName, f);		}	}		protected void checkSourceData() {		super.checkSourceData();		if (sourceData instanceof CoreModelDataSet) {			((CoreModelDataSet)sourceData).updateForNewSample();			sourceData.variableChanged("ls");		}	}		protected void addSummariesToVariables() {		if (sourceData instanceof CoreModelDataSet)			((CoreModelDataSet)sourceData).updateForNewSample();		super.addSummariesToVariables();	}		public void setSummaryDecimals(String[] componentKey, int ssqDecimals, int rSquaredDecimals) {		setSummaryDecimals(componentKey, ssqDecimals, rSquaredDecimals, 0, 0);	}		public void setSummaryDecimals(String[] componentKey, int ssqDecimals,																	int rSquaredDecimals, int mssDecimals, int fDecimals) {		for (int i=0 ; i<componentKey.length ; i++) {			SsqVariable ssq = (SsqVariable)getVariable(componentKey[i]);			ssq.setDecimals(ssqDecimals);			String mssName = "m-" + componentKey[i];			SsqVariable mss = (SsqVariable)getVariable(mssName);			if (mss != null)				mss.setDecimals(mssDecimals);			String fName = "f-" + componentKey[i];			SsqRatioVariable f = (SsqRatioVariable)getVariable(fName);			if (f != null)				f.setDecimals(fDecimals);		}		SsqRatioVariable rSquared = (SsqRatioVariable)getVariable(kRSquaredKey);		rSquared.setDecimals(rSquaredDecimals);	}}