package models;import dataView.*;public class GroupsAdjustedSsqVariable extends AdjustedSsqVariable {	private double groupMean[];		public GroupsAdjustedSsqVariable(String theName, DataSet data, String xKey, String yKey,																							int displayDecimals) {		super(theName, data, xKey, yKey, displayDecimals);	}		protected boolean initialiseXY() {		if (super.initialiseXY()) {			NumVariable yVar = (NumVariable)data.getVariable(yKey);			CatVariable xVar = (CatVariable)data.getVariable(xKey);			int nCats = xVar.noOfCategories();			groupMean = new double[nCats];			double groupSsq[] = new double[nCats];			int[] n = new int[nCats];			int nTotal = 0;			double sy = 0.0;			double syy = 0.0;			ValueEnumeration ye = yVar.values();			ValueEnumeration xe = xVar.values();			while (ye.hasMoreValues() && xe.hasMoreValues()) {				int xCat = xVar.labelIndex(xe.nextValue());				double y = ye.nextDouble();				groupMean[xCat] += y;				groupSsq[xCat] += y * y;				sy += y;				syy += y * y;				n[xCat] ++;				nTotal ++;			}			yMean = sy / nTotal;						sourceResidSsq = 0.0;			for (int i=0 ; i<nCats ; i++) {				groupMean[i] /= n[i];				sourceResidSsq += (groupSsq[i] - groupMean[i] * groupMean[i] * n[i]);			}						sourceExplSsq = (syy - sy * yMean) - sourceResidSsq;						return true;		}		else			return false;	}		protected double getFittedValue(Variable xVar, Value x) {		int xCat = ((CatVariable)xVar).labelIndex(x);		return groupMean[xCat];	}}