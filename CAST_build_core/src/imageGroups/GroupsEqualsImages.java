package imageGroups;import java.awt.*;public class GroupsEqualsImages extends AudioVisual {	static public Image mu1, mu2, sigma1, sigma2, d, d2, suc1, suc2, n1, n2, p, pSDHat;	static public Image sigmaDiffHat, sigmaPDiffHat, sigmaXbarHat, muDiffHat;	static final public int kParamWidth = MeanSDImages.kParamWidth;	static final public int kParamAscent = MeanSDImages.kParamAscent;	static final public int kParamDescent = MeanSDImages.kParamDescent;	static final public int kParamHeight = MeanSDImages.kParamHeight;		static final public int kPSDHatWidth = 33;	static final public int kPSDHatAscent = 14;	static final public int kPSDHatDescent = 4;	static final public int kPSDHatHeight = kPSDHatAscent + kPSDHatDescent;		static final public int kSigmaParamWidth = 31;	static final public int kSigmaParamAscent = 15;	static final public int kSigmaParamDescent = 9;	static final public int kSigmaParamHeight = kSigmaParamAscent + kSigmaParamDescent;		static final public int kSigmaDiffParamWidth = 60;	static final public int kSigmaDiffParamAscent = 14;	static final public int kSigmaDiffParamDescent = 8;	static final public int kSigmaDiffParamHeight = kSigmaDiffParamAscent + kSigmaDiffParamDescent;		static final public int kDiffHatParamWidth = 60;	static final public int kDiffHatParamAscent = 17;	static final public int kDiffHatParamDescent = 6;	static final public int kDiffHatParamHeight = kDiffHatParamAscent + kDiffHatParamDescent;		static public boolean loadedAnova = false;		synchronized static public void loadGroups(Component theComponent) {		if (loadedAnova)			return;				MediaTracker tracker = new MediaTracker(theComponent);				mu1 = loadImage("xEquals/mu1.png", tracker, mu1, theComponent);		mu2 = loadImage("xEquals/mu2.png", tracker, mu2, theComponent);		sigma1 = loadImage("xEquals/sigma1.png", tracker, sigma1, theComponent);		sigma2 = loadImage("xEquals/sigma2.png", tracker, sigma2, theComponent);		d = loadImage("xEquals/d.png", tracker, d, theComponent);		d2 = loadImage("xEquals/d2.png", tracker, d2, theComponent);				suc1 = loadImage("xEquals/suc1.png", tracker, suc1, theComponent);		suc2 = loadImage("xEquals/suc2.png", tracker, suc2, theComponent);		n1 = loadImage("xEquals/n1.png", tracker, n1, theComponent);		n2 = loadImage("xEquals/n2.png", tracker, n2, theComponent);				p = loadImage("xEquals/p.png", tracker, p, theComponent);		pSDHat = loadImage("xEquals/pSDHat.png", tracker, pSDHat, theComponent);				sigmaDiffHat = loadImage("xEquals/sigmaDiffHat.png", tracker, sigmaDiffHat, theComponent);		sigmaPDiffHat = loadImage("xEquals/sigmaPDiffHat.png", tracker, sigmaPDiffHat, theComponent);		sigmaXbarHat = loadImage("xEquals/sigmaXbarHat.png", tracker, sigmaXbarHat, theComponent);		muDiffHat = loadImage("xEquals/muDiffHat.png", tracker, muDiffHat, theComponent);				waitForLoad(tracker);		loadedAnova = true;	}}