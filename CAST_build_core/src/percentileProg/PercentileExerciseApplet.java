package percentileProg;import dataView.*;import exercise.*;import coreVariables.*;import percentile.*;public class PercentileExerciseApplet extends PropnExerciseApplet {	static final private String SAMP_SIZE_LIMITS_PARAM = "sampSizeLimits";	static final private String PERCENT_LIMITS_PARAM = "percentLimits";	static final private String RETURN_PERIOD_LIMITS_PARAM = "returnPeriodLimits";	static final private String UNITS_PARAM = "units";		protected DataSet getReferenceData(DataSet data) {		DataSet referenceData = super.getReferenceData(data);					ScaledVariable propnVar = new ScaledVariable(translate("Proportion"),											(NumVariable)referenceData.getVariable("ref"), "ref", 0.0, 0.01, 2);		referenceData.addVariable("propn", propnVar);		return referenceData;	}		protected String getUnitsString() {		return getParameter(UNITS_PARAM);	}		protected Problem getCoreProblem(DataSet data, String aboutDataText, String[] questionText,									String aboveBelowStrings, int longestQuestionIndex) {		int sampSizeMinMax[] = readIntLimits(SAMP_SIZE_LIMITS_PARAM);		int percentMinMax[] = readIntLimits(PERCENT_LIMITS_PARAM);		int returnPeriodMinMax[] = readIntLimits(RETURN_PERIOD_LIMITS_PARAM);				return new PercentileProblem(data, aboutDataText, questionText, aboveBelowStrings,										longestQuestionIndex, sampSizeMinMax, percentMinMax, returnPeriodMinMax,										maxAnswer.decimals, getUnitsString());	}		protected XPanel getWorkingPanel(DataSet data, DataSet refData, String horizAxisInfo,																				String longVarName, NumValue maxY) {		return new PercentileWorkingPanel(data, refData, this, horizAxisInfo, longVarName,																																	maxY, getUnitsString());	}	}