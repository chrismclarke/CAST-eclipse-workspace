package coreVariables;import dataView.*;import distn.*;public class TailAreaVariable extends NumFunctionVariable {	static final public int TWO_TAILED = 0;	static final public int UPPER_TAIL = 1;	static final public int LOWER_TAIL = 2;		private NumVariable statVariable;	private ContinDistnVariable distnVariable;	private String statKey, distnKey;	private int tailType;	private int decimals;		public TailAreaVariable(String theName, DataSet data, String statKey, String distnKey,																								int tailType, int decimals) {		super(theName);		statVariable = (NumVariable)data.getVariable(statKey);		distnVariable = (ContinDistnVariable)data.getVariable(distnKey);		this.statKey = statKey;		this.distnKey = distnKey;		this.decimals = decimals;		this.tailType = tailType;	}//--------------------------------------------------------		public int getMaxDecimals() {		return decimals;	}		public int noOfValues() {		return statVariable.noOfValues();	}		public Value valueAt(int index) {		double statVal = statVariable.doubleValueAt(index);		double lowerTailProb = distnVariable.getCumulativeProb(statVal);		double prob;		switch (tailType) {			case TWO_TAILED:				prob = 2.0 * Math.min(lowerTailProb, 1.0 - lowerTailProb);				break;			case UPPER_TAIL:				prob = 1.0 - lowerTailProb;				break;			default:			case LOWER_TAIL:				prob = lowerTailProb;		}		return new NumValue(prob, decimals);	}		public boolean noteVariableChange(String key) {		return statKey.equals(key) || distnKey.equals(key);	}}