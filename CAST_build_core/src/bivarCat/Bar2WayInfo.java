package bivarCat;class Bar2WayInfo {	private int leftRightBorder, topBottomBorder;					//	width of outer border	private double [][] cellHt;			//	proportion of axis	private double [][] cellBottom;		//	proportion of axis	private int [][] horizPos;				//	pixels		private Bar2WayInfo endInfo = null;	private int frameNo, maxFrameNo;		public Bar2WayInfo(int leftRightBorder, int topBottomBorder, double [][] cellHt,															double [][] cellBottom, int [][] horizPos) {		this.leftRightBorder = leftRightBorder;		this.topBottomBorder = topBottomBorder;		this.cellHt = cellHt;		this.cellBottom = cellBottom;		this.horizPos = horizPos;	}		public Bar2WayInfo(Bar2WayInfo startInfo, Bar2WayInfo endInfo, int frameNo, int maxFrameNo) {		leftRightBorder = startInfo.leftRightBorder;		topBottomBorder = startInfo.topBottomBorder;		cellHt = startInfo.cellHt;		cellBottom = startInfo.cellBottom;		horizPos = startInfo.horizPos;				this.endInfo = endInfo;		this.frameNo = frameNo;		this.maxFrameNo = maxFrameNo;	}		public int getLeftRightBorder() {		if (endInfo == null)			return leftRightBorder;		else			return leftRightBorder + frameNo * (endInfo.leftRightBorder - leftRightBorder) / maxFrameNo;	}		public int getTopBottomBorder() {		if (endInfo == null)			return topBottomBorder;		else			return topBottomBorder + frameNo * (endInfo.topBottomBorder - topBottomBorder) / maxFrameNo;	}		public double getCellHt(int i, int j) {		if (endInfo == null)			return cellHt[i][j];		else			return cellHt[i][j] + frameNo * (endInfo.cellHt[i][j] - cellHt[i][j]) / maxFrameNo;	}		public double getCellBottom(int i, int j) {		if (endInfo == null)			return cellBottom[i][j];		else			return cellBottom[i][j] + frameNo * (endInfo.cellBottom[i][j] - cellBottom[i][j]) / maxFrameNo;	}		public int getHorizPos(int i, int j) {		if (endInfo == null)			return horizPos[i][j];		else			return horizPos[i][j] + frameNo * (endInfo.horizPos[i][j] - horizPos[i][j]) / maxFrameNo;	}}