package coreSummaries;import java.awt.*;import dataView.*;abstract public class IntervalSummaryVariable extends Variable implements SummaryVariable {	public IntervalSummaryVariable(String theName) {		super(theName);	}		public void setValues(double[] lowValues, double[] highValues, int decimals) {		setNoOfGroups(lowValues.length);		for (int i=0 ; i<lowValues.length ; i++)			setValueAt(new IntervalValue(lowValues[i], highValues[i], decimals), i);	}		public void setDecimals(int decimals) {		ValueEnumeration e = values();		while (e.hasMoreValues()) {			((IntervalValue)e.nextValue()).setDecimals(decimals);		}	}		public int getMaxAlignedWidth(Graphics g, int decimals) {		int maxWidth = 0;		ValueEnumeration e = values();		while (e.hasMoreValues()) {			IntervalValue v = (IntervalValue)e.nextValue();			int valWidth = v.stringWidth(g, decimals);			if (valWidth > maxWidth)				maxWidth = valWidth;		}		return maxWidth;	}	//-----------------------------------------------------------------------------		public void addSummary(DataSet sourceData) {		addValue(evaluateSummary(sourceData));	}		public void redoLastSummary(DataSet sourceData) {		setValueAt(evaluateSummary(sourceData), noOfValues() - 1);	}		abstract protected IntervalValue evaluateSummary(DataSet sourceData);		public void clearSummaries() {		clearData();	}}