package linMod;import dataView.*;import models.*;public class ResidDistnModel extends LinearModel {	private NumValue sigma;		private double xMean, sxx;	private int n;		public ResidDistnModel(String name, DataSet data, String xKey, String dataModelKey) {		super(name, data, xKey, kZero, kZero, new NumValue(0.0, 9));					//	needs new NumValue() because otherwise setSD() will change kZero everywhere				LinearModel dataModel = (LinearModel)data.getVariable(dataModelKey);		sigma = dataModel.evaluateSD();				ValueEnumeration xe = ((NumVariable)data.getVariable(xKey)).values();		double sx = 0.0;		sxx = 0.0;		n = 0;		while (xe.hasMoreValues()) {			double x = xe.nextDouble();			if (!Double.isNaN(x)) {				sx += x;				sxx += x * x;				n ++;			}		}		xMean = sx / n;		sxx -= sx * xMean;				double furthestX = 0;		xe = ((NumVariable)data.getVariable(xKey)).values();		while (xe.hasMoreValues())			furthestX = Math.max(furthestX, Math.abs(xe.nextDouble() - xMean));				setSD(evaluateSD(new NumValue(xMean + furthestX, 9)).toDouble());									//	need to set s0 to min SD so that Normal3DArtist scales pdfs correctly	}		public NumValue evaluateSD(Value x) {		double xDiff = ((NumValue)x).toDouble() - xMean;		double leverage = 1.0 / n + xDiff * xDiff / sxx;				return new NumValue(sigma.toDouble() * Math.sqrt(1.0 - leverage), sigma.decimals);	}}