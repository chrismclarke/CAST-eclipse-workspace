package linMod;import dataView.*;import models.*;public class PredErrorSummaryVariable extends NumSummaryVariable {	static final public int PREDICT_MEAN = 0;	static final public int PREDICT_NEW_VALUE = 1;		private int errorType;	private String sourceXKey, sourceYKey, modelKey;	private int decimals;		public PredErrorSummaryVariable(String theName, String sourceXKey, String sourceYKey,																		String modelKey, int decimals, int errorType) {		super(theName);		this.sourceXKey = sourceXKey;		this.sourceYKey = sourceYKey;		this.modelKey = modelKey;		this.decimals = decimals;		this.errorType = errorType;	}		protected NumValue evaluateSummary(DataSet sourceData) {		ResponsePredictVariable yVar = (ResponsePredictVariable)sourceData.getVariable(sourceYKey);		NumVariable xVar = (NumVariable)sourceData.getVariable(sourceXKey);		int n = xVar.noOfValues();				double x0 = xVar.doubleValueAt(n-1);		double y0 = yVar.getNewY().toDouble();				LinearModel model = (LinearModel)sourceData.getVariable(modelKey);		double y0Mean = model.evaluateMean(x0);				LSEstimate lse = new LSEstimate(sourceData, sourceXKey, sourceYKey);		double y0Prediction = lse.getIntercept() + lse.getSlope() * x0;				double error = (errorType == PREDICT_MEAN) ? (y0Prediction - y0Mean)																								: (y0Prediction - y0);		return new NumValue(error, decimals);	}}