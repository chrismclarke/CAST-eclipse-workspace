package exercise;import java.util.*;import dataView.*;public class TextTokenizer extends StringTokenizer {		private SymbolCoding coding[];	private Value value[];		public TextTokenizer(String s, SymbolCoding coding[], Value value[]) {		super(s);		this.coding = coding;		this.value = value;	}		public TextItem nextWord() {		if (!hasMoreTokens())			return null;				String rawWord = nextToken();//		Image picture = null;		if (rawWord.charAt(0) == '#') {			for (int i=0 ; i<coding.length ; i++)				if (rawWord.startsWith(coding[i].code)) {					rawWord = rawWord.substring(coding[i].code.length());					return new TextItem(coding[i].picture, coding[i].imageWidth, coding[i].imageAscent, rawWord);				}			int index = rawWord.charAt(1) - '0';			if (index >= 0 && index < value.length)				return new TextItem(value[index], rawWord.substring(3));		}		return new TextItem(rawWord);	}		public boolean hasMoreWords() {		return hasMoreTokens();	}}