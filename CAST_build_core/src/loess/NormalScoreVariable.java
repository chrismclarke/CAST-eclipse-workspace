package loess;import dataView.*;import distn.*;public class NormalScoreVariable extends NumFunctionVariable {	private NumVariable baseVariable;	private String baseKey;	private int displayDecimals;		private NumValue score[];	private int dataIndex[];		public NormalScoreVariable(String theName, DataSet data, String baseKey,																							int displayDecimals) {		super(theName);		baseVariable = (NumVariable)data.getVariable(baseKey);		this.baseKey = baseKey;		this.displayDecimals = displayDecimals;		setupScores();	}		public boolean noteVariableChange(String key) {		boolean changed = baseKey.equals(key);		if (changed)			setupScores();		return changed;	}		private void setupScores() {		if (score == null || score.length != baseVariable.noOfValues()) {			int n = baseVariable.noOfValues();			score = new NumValue[n];			dataIndex = new int[n];			double step = 1.0 / (n + 1.0);			double p = 0.0;			for (int i=0 ; i<n ; i++) {				p += step;				score[i] = new NumValue(NormalTable.quantile(p), displayDecimals);			}		}		int sortedIndex[] = baseVariable.getSortedIndex();		for (int i=0 ; i<sortedIndex.length ; i++)			dataIndex[sortedIndex[i]] = i;	}//--------------------------------------------------------		public int getMaxDecimals() {		return displayDecimals;	}		public int noOfValues() {		return baseVariable.noOfValues();	}		public Value valueAt(int index) {		return score[dataIndex[index]];	}}