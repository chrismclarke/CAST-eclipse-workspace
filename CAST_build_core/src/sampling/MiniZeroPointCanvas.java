package sampling;import java.awt.*;import dataView.*;public class MiniZeroPointCanvas extends XPanel {	static final private String kZeroPoint = "0.";		static final protected int kTopBorder = MiniRandomDigit.kTopBorder;	static final protected int kBottomBorder = MiniRandomDigit.kBottomBorder;	static final protected int kLeftRightBorder = MiniRandomDigit.kLeftRightBorder;	static final protected Color kDigitColor = MiniRandomDigit.kDigitColor;		private boolean initialised = false;	private int ascent, zeroPtWidth;		public MiniZeroPointCanvas() {	}	//---------------------------------------------------------------------		private boolean initialise(Graphics g) {		if (initialised)			return false;		initialised = true;				Font newFont = MiniRandomDigit.getBiggerFont(getFont());		setFont(newFont);		g.setFont(newFont);				FontMetrics fm = g.getFontMetrics();		ascent = fm.getAscent();		zeroPtWidth = fm.stringWidth(kZeroPoint);		return true;	}		public void paintComponent(Graphics g) {		super.paintComponent(g);		initialise(g);				g.setColor(getBackground());		g.fillRect(0, 0, getSize().width, getSize().height);					g.setColor(kDigitColor);		g.drawString(kZeroPoint, kLeftRightBorder, kTopBorder + ascent);	}//-----------------------------------------------------------------------------------		public Dimension getMinimumSize() {		Graphics g = getGraphics();		g.setFont(getFont());					//		shouldn't really be needed, but font doesn't seem to always get initialised		initialise(g);		return new Dimension(zeroPtWidth + 2 * kLeftRightBorder, ascent + kTopBorder + kBottomBorder);	}		public Dimension getPreferredSize() {		return getMinimumSize();	}}