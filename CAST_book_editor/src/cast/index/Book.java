package cast.index;import java.util.*;import cast.bookManager.*;public class Book {	static final private int kMaxChapters = 30;		private Chapter ch[] = new Chapter[kMaxChapters];	private int nChapters = 0;		public Book() {	}		public int countApplets() {		int nApplets = 0;		for (int i=0 ; i<kMaxChapters ; i++)			if (ch[i] != null)				nApplets += ch[i].countApplets();		return nApplets;	}		public int countPages() {		int nPages = 0;		for (int i=0 ; i<kMaxChapters ; i++)			if (ch[i] != null)				nPages += ch[i].countPages();		return nPages;	}		public int countChapters() {		return nChapters - 1;			//	includes preface but not splash 'chapter'	}		protected Chapter addChapter() {		return ch[nChapters++] = new Chapter();	}		protected Section addSection(String dir, String filePrefix, CastEbook castEbook) {		return ch[nChapters-1].addSection(dir, filePrefix, castEbook);	}		protected Page addPage(String dir, String filePrefix, int pageIndex, Hashtable indexTable,																		Hashtable dataSetTable, Hashtable indexTranslationTable, CastEbook castEbook) {		return ch[nChapters-1].addPage(dir, filePrefix, pageIndex, indexTable, dataSetTable, indexTranslationTable, castEbook);	}}